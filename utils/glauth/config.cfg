#################
# glauth.conf

#################
# General configuration.
debug = true
# syslog = true


#################
# Server configuration.
[ldap]
  enabled = false
  # run on a non privileged port
  listen = "0.0.0.0:3893"
  tls = false

[ldaps]
# to enable ldaps genrerate a certificate, eg. with:
# openssl req -x509 -newkey rsa:4096 -keyout glauth.key -out glauth.crt -days 365 -nodes -subj '/CN=`hostname`'
  enabled = true
  listen = "0.0.0.0:3894"
  cert = "/app/config/auth/tls.crt"
  key = "/app/config/auth/tls.key"

#################
# The backend section controls the data store.
[backend]
  datastore = "config"
  baseDN = "dc=catdock,dc=org"
  
  ## Configure dn format to use structures like 
  ## "uid=serviceuser,cn=svcaccts,$BASEDN" instead of "cn=serviceuser,ou=svcaccts,$BASEDN"
  ## to help ease migrations from other LDAP systems
  nameformat = "uid"
  groupformat = "ou"

  ## Configure ssh-key attribute name, default is 'sshPublicKey'
  # sshkeyattr = "ipaSshPubKey"

[behaviors]
  # Ignore all capabilities restrictions, for instance allowing every user to perform a search
  IgnoreCapabilities = false
  # Enable a "fail2ban" type backoff mechanism temporarily banning repeated failed login attempts
  LimitFailedBinds = true
  # How many failed login attempts are allowed before a ban is imposed
  NumberOfFailedBinds = 3
  # How long (in seconds) is the window for failed login attempts
  PeriodOfFailedBinds = 10
  # How long (in seconds) is the ban duration
  BlockFailedBindsFor = 60
  # Clean learnt IP addresses every N seconds
  PruneSourceTableEvery = 600
  # Clean learnt IP addresses not seen in N seconds
  PruneSourcesOlderThan = 600


#################
# Enable and configure the optional REST API here.
[api]
  enabled = true
  tls = false # enable TLS for production!!
  internals = true
  listen = "0.0.0.0:5555"
  cert = "cert.pem"
  key = "key.pem"

#################
# The groups section contains a hardcoded list of valid users.
[[groups]]
  name = "argocd-admins"
  gidnumber = 5501